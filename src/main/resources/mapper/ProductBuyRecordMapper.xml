<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snatch.goods.dao.ProductBuyRecordMapper">
  <resultMap id="BaseResultMap" type="com.snatch.goods.entity.ProductBuyRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="sum_price" jdbcType="DECIMAL" property="sumPrice" />
    <result column="buy_time" jdbcType="TIMESTAMP" property="buyTime" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, product_id, price, count, sum_price, buy_time, note
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_buy_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from p_buy_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.snatch.goods.entity.ProductBuyRecord">
    insert into p_buy_record (id, user_id, product_id, 
      price, count, sum_price, 
      buy_time, note)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{count,jdbcType=INTEGER}, #{sumPrice,jdbcType=DECIMAL}, 
      #{buyTime,jdbcType=TIMESTAMP}, #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.snatch.goods.entity.ProductBuyRecord">
    insert into p_buy_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="sumPrice != null">
        sum_price,
      </if>
      <if test="buyTime != null">
        buy_time,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="sumPrice != null">
        #{sumPrice,jdbcType=DECIMAL},
      </if>
      <if test="buyTime != null">
        #{buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.snatch.goods.entity.ProductBuyRecord">
    update p_buy_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="sumPrice != null">
        sum_price = #{sumPrice,jdbcType=DECIMAL},
      </if>
      <if test="buyTime != null">
        buy_time = #{buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.snatch.goods.entity.ProductBuyRecord">
    update p_buy_record
    set user_id = #{userId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      count = #{count,jdbcType=INTEGER},
      sum_price = #{sumPrice,jdbcType=DECIMAL},
      buy_time = #{buyTime,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>